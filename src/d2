
NAMESPACE : ft

begin() & end() 
=======================================

map Size: 4
map [map1] contains: 

[2] = 2
[4] = 4
[5] = 1
[10] = 3

map1.begin(): 2
=======================================

assign operator=()
=======================================

map Size: 4
map [map1] contains: 

[2] = 2
[4] = 4
[5] = 1
[10] = 3

before assigning map1 to map2

map Size: 0
map [map2] contains: nothing
after assigning map1 to map2

map Size: 4
map [map2] contains: 

[2] = 2
[4] = 4
[5] = 1
[10] = 3

=======================================

clear()
=======================================

map Size: 4
map [map1] contains: 

[2] = 2
[4] = 4
[5] = 1
[10] = 3

after clearing map1

map Size: 0
map [map1] contains: nothing
=======================================

count()
=======================================

map Size: 4
map [map1] contains: 

[2] = 2
[4] = 4
[5] = 1
[10] = 3

map1.count(5): 1
map1.count(6): 0
=======================================

empty()
=======================================

map Size: 4
map [map1] contains: 

[2] = 2
[4] = 4
[5] = 1
[10] = 3

map1.empty(): 0
after clearing map1

map Size: 0
map [map1] contains: nothing
map1.empty(): 0
=======================================

find()
=======================================

map Size: 3
map [map1] contains: 

[2] = 2
[5] = 1
[10] = 3

5 has been found and its second is = 1
6 has not been found
=======================================

insert()
=======================================

map Size: 3
map [map1] contains: 

[2] = 2
[5] = 1
[10] = 3


map Size: 4
map [map1] contains: 

[2] = 2
[4] = 4
[5] = 1
[10] = 3

inserted 4, 4 at 4

map Size: 4
map [map2] contains: 

[0] = 20
[2] = 30
[3] = 40
[4] = 50

=======================================

map constructors
=======================================

map Size: 2
map [map1] contains: 

[2] = 2
[5] = 1


map Size: 2
map [map2] contains: 

[2] = 2
[5] = 1


map Size: 2
map [map3] contains: 

[2] = 2
[5] = 1

=======================================

erase()
=======================================

map Size: 6
map [map1] contains: 

[0] = 1
[1] = 110
[2] = 2
[3] = 300
[4] = 4
[10] = 3

map1.erase(0): 0
erase
erase

map Size: 6
map [map1] contains: 

[3] = 300
[4] = 4
[10] = 3

erase

map Size: 6
map [map1] contains: 

[4] = 4
[10] = 3

=======================================

max_size()
=======================================
map1.max_size(): 461168601842738790
=======================================

swap()
=======================================

map Size: 4
map [map1] contains: 

[2] = 2
[4] = 4
[5] = 1
[10] = 3


map Size: 4
map [map2] contains: 

[0] = 1
[2] = 2
[4] = 4
[10] = 3


map Size: 4
map [map1] contains: 

[0] = 1
[2] = 2
[4] = 4
[10] = 3


map Size: 4
map [map2] contains: 

[2] = 2
[4] = 4
[5] = 1
[10] = 3

=======================================

lower_bound()
=======================================

map Size: 4
map [map1] contains: 

[2] = 2
[4] = 4
[5] = 1
[10] = 3

map1.lower_bound(3): 4
map1.lower_bound(5): 5
map1.lower_bound(6): 10
=======================================

upper_bound()
=======================================

map Size: 4
map [map1] contains: 

[2] = 2
[4] = 4
[5] = 1
[10] = 3

map1.upper_bound(3): 4
map1.upper_bound(5): 10
map1.upper_bound(6): 10
=======================================

equal_range()
=======================================

map Size: 4
map [map1] contains: 

[2] = 2
[4] = 4
[5] = 1
[10] = 3

map1.equal_range(3): 4 4
map1.equal_range(5): 5 10
map1.equal_range(6): 10 10
=======================================

get_allocator()
=======================================

map Size: 0
map [map1] contains: nothing
alloc max size: 2305843009213693951
=======================================

const iterators
=======================================

map Size: 4
map [map1] contains: 

[2] = 2
[4] = 4
[5] = 1
[10] = 3

map1.begin(): 2
map1.end(): 10
=======================================

reverse iterators
=======================================

map Size: 4
map [map1] contains: 

[2] = 2
[4] = 4
[5] = 1
[10] = 3

[10] = 3
[5] = 1
[4] = 4
[2] = 2
=======================================

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< end of map tests >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

end of program
