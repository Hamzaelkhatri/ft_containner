
NAMESPACE : ft

begin() & end() 
=======================================

map Size: 4
map [set1] contains: 

here [2] = 2
here [4] = 4
here [5] = 5
here [10] = 10

set1.begin(): 2
=======================================

assign operator=()
=======================================

map Size: 4
map [set1] contains: 

here [2] = 2
here [4] = 4
here [5] = 5
here [10] = 10

before assigning set1 to set2
after assigning set1 to set2

map Size: 4
map [set2] contains: 

here [2] = 2
here [4] = 4
here [5] = 5
here [10] = 10

=======================================

clear()
=======================================

map Size: 4
map [set1] contains: 

here [2] = 2
here [4] = 4
here [5] = 5
here [10] = 10

after clearing set1
=======================================

count()
=======================================

map Size: 4
map [set1] contains: 

here [2] = 2
here [4] = 4
here [5] = 5
here [10] = 10

set1.count(5): 1
set1.count(6): 0
=======================================

empty()
=======================================

map Size: 4
map [set1] contains: 

here [2] = 2
here [4] = 4
here [5] = 5
here [10] = 10

set1.empty(): 0
after clearing set1
set1.empty(): 1
=======================================

find()
=======================================

map Size: 3
map [set1] contains: 

here [2] = 2
here [5] = 5
here [10] = 10

5 has been found and its second is = 5
6 has not been found
=======================================

insert()
=======================================

map Size: 3
map [set1] contains: 

here [2] = 2
here [5] = 5
here [10] = 10


map Size: 4
map [set1] contains: 

here [2] = 2
here [4] = 4
here [5] = 5
here [10] = 10

inserted 4, 4 at 4
=======================================

map constructors
=======================================

map Size: 2
map [set1] contains: 

here [2] = 2
here [5] = 5


map Size: 2
map [set2] contains: 

here [2] = 2
here [5] = 5


map Size: 2
map [map3] contains: 

here [2] = 2
here [5] = 5

=======================================

erase()
=======================================

map Size: 6
map [set1] contains: 

here [0] = 0
here [1] = 1
here [2] = 2
here [3] = 3
here [4] = 4
here [10] = 10

set1.erase(0): 1

map Size: 3
map [set1] contains: 

here [3] = 3
here [4] = 4
here [10] = 10


map Size: 2
map [set1] contains: 

here [4] = 4
here [10] = 10

=======================================

max_size()
=======================================
set1.max_size(): 18446744073709551615
================std=======================
set1.max_size(): 576460752303423487
=======================================

swap()
=======================================

map Size: 4
map [set1] contains: 

here [2] = 2
here [4] = 4
here [5] = 5
here [10] = 10


map Size: 4
map [set2] contains: 

here [0] = 0
here [2] = 2
here [4] = 4
here [10] = 10


map Size: 4
map [set1] contains: 

here [0] = 0
here [2] = 2
here [4] = 4
here [10] = 10


map Size: 4
map [set2] contains: 

here [2] = 2
here [4] = 4
here [5] = 5
here [10] = 10

=======================================

lower_bound()
=======================================

map Size: 4
map [set1] contains: 

here [2] = 2
here [4] = 4
here [5] = 5
here [10] = 10

set1.lower_bound(3): 4
set1.lower_bound(5): 5
set1.lower_bound(6): 10
=======================================

upper_bound()
=======================================

map Size: 4
map [set1] contains: 

here [2] = 2
here [4] = 4
here [5] = 5
here [10] = 10

set1.upper_bound(3): 4
set1.upper_bound(5): 10
set1.upper_bound(6): 10
=======================================

equal_range()
=======================================

map Size: 4
map [set1] contains: 

here [2] = 2
here [4] = 4
here [5] = 5
here [10] = 10

set1.equal_range(3): 4 4
set1.equal_range(5): 5 10
set1.equal_range(6): 10 10
=======================================

get_allocator()
=======================================
alloc max size: 4611686018427387903
=======================================

const iterators
=======================================

map Size: 4
map [set1] contains: 

here [2] = 2
here [4] = 4
here [5] = 5
here [10] = 10

set1.begin(): 2
set1.end(): 10
=======================================

reverse iterators
=======================================

map Size: 4
map [set1] contains: 

here [2] = 2
here [4] = 4
here [5] = 5
here [10] = 10

[10] = 10
[5] = 5
[4] = 4
[2] = 2
=======================================
